メモ

・商品一覧ページはアプリとシステムで同一のものを使用すればよいか？

・商品情報入力時に画像ファイルを参照で選択させ、
　そのようにして送られてきた情報からファイルパスを取り出せるのであれば
　ファイルパスをデータベースに格納する形としたい

　画像の取り扱いについてよくわからなくなってきた。
　CDNにアップロードするのはフロントから？
　販売管理システムからspringbootに渡して、
　springbootからCDNに渡せばよい？
　CDNに渡すメソッド内でデータベースにはURLを保存する。

　つまり、フロント → springboot → cloudflare R2 で画像をアップロード
　それと同時にspringboot → データベース で画像のURL(ファイル名？)を保存
　データベース → springboot → フロント で画像URLを渡し、
　フロント側で <img src=画像URL> とすれば、表示できるはず。

・フロントからspringbootにファイルを送信できるかやってみる
　cloudflareでR2をつくる
　springbootからcloudflareにアップロードできるかやってみる

　productsテーブルの内容でProductエンティティクラスを作成
　フォーム内容からProductCreateDtoクラスを作成
　(@RequestBody ProductCreateDto dto) でフォーム情報をdtoに結び付ける
　メソッド内でdtoに想定した内容、そして画像ファイルがちゃんと含まれているか確認する

public void createProduct(@ModelAttribute ProductCreateDto dto) {
        System.out.println(dto.getImage());
    }
でnullと表示されている原因を調べるところから
ファイルはDtoクラスのメンバじゃなくて@RequestPart MultipartFile file
でDtoとは別に受け取らなければならないのだろうか？

ECサイトおよび販売管理システム
ECサイトのページ
    商品一覧
    カート投入画面
    購入画面
    注文履歴
商品管理のページ
    商品一覧
    商品の追加と削除
    在庫の増減
金融系を装った金額チャージページ
    数値入力欄
    チャージボタン
    チャージ完了画面

テーブル
    商品(id, name, genre, price, total_purchased, release_date, delivery_time, image_url)
    ユーザ(id, name, password, balance)
    注文(ユーザID, 商品ID, order_date) 多対多

様々なジャンルの商品を選択できること
商品イラストはフリー素材を使用すること
おすすめ商品として、ユーザが購入したジャンルの
人気の商品が表示されること
発売順、人気順でソートができること
表示したいジャンルにチェックを入れ、そのジャンルの商品だけが
　表示される機能を有すること
注文する日付と商品の配達日数からお届け日を計算すること
複数の注文がある場合、お届け日が同一のものはまとめて到着、
　異なるものは違う日付に到着すること

セッションベースの認証を使用し、
ログイン後しばらくの間はログインを省略できること
ログイン状態の保持をチェックボックスで選択できること

在庫数が0の場合、売り切れと表示され商品をクリックしても反応が無いこと
商品画像または商品名エリアをクリックすることで購入ページに遷移すること

データの正規化について理解した上で行えていること
セッションベースの認証について理解した上でプログラムとして実装できていること

マークダウンのテーブル便利な拡張機能
https://qiita.com/tawara_/items/5d59cf725e7c7aa72f0f

springbootでは multipart/form-data で送信されたそれぞれの情報を
@RequestPart("名前")で取得することができる。
https://b1san-blog.com/post/spring/spring-file/

