メモ

・商品一覧ページはアプリとシステムで同一のものを使用すればよいか？

・つまり、フロント → springboot → cloudflare R2 で画像をアップロード
　それと同時にspringboot → データベース で画像のURL(ファイル名？)を保存
　データベース → springboot → フロント で画像URLを渡し、
　フロント側で <img src=画像URL> とすれば、表示できるはず。

　springbootからR2にアクセスするコードは以下参照
　https://developers.cloudflare.com/r2/examples/aws/aws-sdk-java/

　flywayを導入してproductsテーブルを作成するSQLファイルを実装するところから
　R2から画像ファイルそのものをダウンロードする処理を実装する
　URLに

　R2はプレフィックスで階層を表現できるため、商品のジャンルごとに
　バケットを分ける必要はなく、階層で表現すればよい。
　そうすれば、データベースからgenreを取得してその文字列をそのまま
　取得したい階層に指定することができる。

　なぜか「S3Exception: The request signature we calculated
　does not match the signature you provided. Check your
　secret access key and signing method.
　(Service: S3, Status Code: 403, Request ID: null)
　(SDK Attempt Count: 1)」のエラーが出るようになってしまった。なぜ？
　listObjects()メソッドは実行できるし、"ecsite"で指定する形でも
　putObject()は変わらずエラーになるので、BUCKET_NAMEが変なことになっている
　わけではなさそう。じゃあなぜ？何がよくない？わからん

　パブリックに公開するように設定した関係で権限がないとかなのだろうか？
　一旦公開をやめてみる
　予想通り、パブリック公開をやめたら今までのようにできるようになった。
　なぜパブリックに公開するとputObject()が行えなくなる？
　権限が必要なのであれば、どうやって権限を付与すればよいのか？
　expectedBucketOwner()でも使うのだろうか？
　それとも公開した場合は、ACLを指定しないとダメなのだろうか？
　じゃないと全ユーザが触れる気がするし。

　また再現しようと同じコードでもう一度やってみたら
　なんか何もしてないのにできるようになった。怖い。
　と思ったらまたなった。更に怖い。
　なんか画像によってエラーが出るかどうかが変わる。
　もしかして_がファイル名に入ってるとエラーが出る？
　「キーに特殊文字を使用する場合はURLエンコードが必要です」みたいなことを
　r2 オブジェクト キー名 で検索したらgoogleのAIが言っている。

　_ を無くしてみたが、エラーになるファイルは変わらずエラーのままである。
　Windowsのフォルダの違いか？
　いや、同じフォルダ内でも送れるのと送れないのがあるためそれも違う。
　何で？？？？？ある程度サイズが大きいとエラーが出る気がする。
　もしかしてバイトに変換してるところで内容が大きいと不具合でも生じるのか？
　エラーメッセージで調べてみると、シークレットキーやらアクセスキーに
　特殊文字が含まれているとOSがそれを変に扱ってそのエラーになるみたいな
　ことしかなかったが、自分のアクセスキーとシークレットキーに特殊文字はない。
　だが、一旦キーを再生成してみるのが良いかもしれない。

　ちなみにR2のputObject()はexpectedBucketOwner()もACLも
　実装してないらしい。expectedBucketOwner()を使ってみたら
　not implement のエラーが出た。

　なんか全く同じ状況の人がawssdkのバージョンをダウングレードしたら
　解決できたと記載があったので、試しに同じバージョンにダウングレードしたら
　本当に解決した。一体何なんだろう。
　S3だけダウングレードすると ep is null みたいなエラーが出たので、
　auth,regionsの2つも同じ2.26.21にダウングレードすることで解決した。
　以下サイトの「Downgrading S3 SDK to version “2.26.21” worked fine.」を参考にした。
　https://community.cloudflare.com/t/the-request-signature-we-calculated-does-not-match-the-signature-you-provided/773465

テーブル
    商品(id, name, genre, price, total_purchased, release_date, delivery_time, image_url)
    ユーザ(id, name, password, balance)
    注文(ユーザID, 商品ID, order_date) 多対多

======================================================================

マークダウンのテーブル便利な拡張機能
https://qiita.com/tawara_/items/5d59cf725e7c7aa72f0f

springbootでは multipart/form-data で送信されたそれぞれの情報を
@RequestPart("名前")で取得することができる。
https://b1san-blog.com/post/spring/spring-file/

aws-java-sdkをそのまま依存関係に追加すると、
ライブラリ全体をインクルードするため、かなりの量の不要なファイルも
取り込むことになってしまう。
aws-java-sdkは1.9.0以降、機能ごとにライブラリを取り込みできるため
そのようにした方が良い。
https://qiita.com/s-katsumata/items/34a326f1d802add10119

@ConfigurationPropertyがつけられたクラスをSpringDIに認識させる3つの方法
@EnableConfigurationPropertiesは記述が簡単だが、
@Beanで管理すると、@Beanメソッドを定義する際にprefixを上書きすることができ、
「同じ構造の異なるprefixを持つプロパティ」を1つのクラスで読み込むことができる。
https://qiita.com/cfg17771855/items/905da3100ae99c5197f0

MySQL8.0以降でユーザに権限を与える場合、ユーザ作成と権限付与は
別々に行わなければならないらしい？
https://www.grimoire.tokyo/2022/04/14/post-252/
https://qiita.com/Atsulabo/items/7512cdc267d89307995d

新たにMYSQL_DATABASEを指定したが、データベースが作られない。
　→ MySQLのdocker公式イメージは、ボリュームが空の状態の時だけ
　　初期化スクリプトを実行し、MYSQL_DATABASE,MYSQL_USERなどを作成する。
　　そのため、ボリュームを削除して再度upしなければならない。

docker compose down は up コマンドと真逆のことをする。
つまり、up で作られうるもの(イメージ、コンテナ、ボリューム、ネットワーク)を
すべて削除する。
https://qiita.com/suin/items/19d65e191b96a0079417

javaで画像ファイルどうかはjavax.imageio.ImageIO#reqd(File)
メソッドで判定することができる。
https://blog.ricemountainer.net/posts/2017/453836237/